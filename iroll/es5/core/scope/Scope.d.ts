export default class Scope {
    readonly rootElement: HTMLElement;
    private deceleration;
    private passthrough;
    private threshold;
    private time;
    private bounce;
    private momentum;
    private axis;
    private scroll;
    private clickable;
    private tap;
    private HWCompositing;
    constructor(el: HTMLElement);
    private getScrollOffsetWidth;
    private getScrollOffsetHeight;
    private compare;
    setPassthrough(sign: number): void;
    setThreshold(hold: number): void;
    setScrollX(x: number): void;
    setScrollY(y: number): void;
    setScrollZ(z: number): void;
    setBounce(bounce: boolean): void;
    setMomentum(momentum: boolean): void;
    setDeceleration(deceleration: number): void;
    setBounceTime(time: number): void;
    setClickable(clickable: boolean): void;
    setTap(tap: boolean): void;
    setHWCompositing(isComposition: boolean): void;
    position(): ScrollKit.Point;
    setAxis(x: number, y: number): void;
    isAxisXPassthrough(): boolean;
    isAxisYPassthrough(): boolean;
    isAxisXScroll(): boolean;
    isAxisYScroll(): boolean;
    isAxisScroll(): boolean;
    isLockAxisXScroll(): boolean;
    isLockAxisYScroll(): boolean;
    isBounce(): boolean;
    isMomentum(): boolean;
    isClickable(): boolean;
    isTap(): boolean;
    isHWCompositing(): boolean;
    getDeceleration(): number;
    getBounceTime(): number;
    getThreshold(): number;
    getWrapElement(): HTMLElement;
    getScrollElement(): HTMLElement;
    getClientWidth(): number;
    getClientHeight(): number;
    getScrollWidth(): number;
    getScrollHeight(): number;
    getMaxScrollWidth(): number;
    getMaxScrollHeight(): number;
}
